$date
  Wed Apr  8 16:18:32 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module t_alu $end
$var reg 1 ! clk_t $end
$var reg 4 " aluop_t[3:0] $end
$var reg 16 # a_t[15:0] $end
$var reg 16 $ b_t[15:0] $end
$var reg 1 % isbranch_t $end
$var reg 10 & outtomemory_t[9:0] $end
$var reg 16 ' outtoregmux_t[15:0] $end
$var reg 1 ( reset_t $end
$scope module math $end
$var reg 1 ) clk $end
$var reg 4 * aluop[3:0] $end
$var reg 16 + a[15:0] $end
$var reg 16 , b[15:0] $end
$var reg 1 - isbranch $end
$var reg 10 . outtomemory[9:0] $end
$var reg 16 / outtoregmux[15:0] $end
$var reg 1 0 reset $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
bUUUU "
bUUUUUUUUUUUUUUUU #
bUUUUUUUUUUUUUUUU $
0%
b0000000000 &
b0000000000000000 '
1(
0)
bUUUU *
bUUUUUUUUUUUUUUUU +
bUUUUUUUUUUUUUUUU ,
0-
b0000000000 .
b0000000000000000 /
10
#1000000000000
0(
00
#2000000000000
b0001 "
b0000001000000000 #
b1000000000 &
b0001 *
b0000001000000000 +
b1000000000 .
#3000000000000
#4000000000000
b0011 "
b0000000000001111 $
b0000001111 &
b0011 *
b0000000000001111 ,
b0000001111 .
#5000000000000
#6000000000000
b0100 "
b0000000000010000 #
b0000000000 &
b0000000000010000 '
b0100 *
b0000000000010000 +
b0000000000 .
b0000000000010000 /
#7000000000000
#8000000000000
b0101 "
b0000000000000101 #
b0000000000001010 $
b0000000000001111 '
b0101 *
b0000000000000101 +
b0000000000001010 ,
b0000000000001111 /
#9000000000000
#10000000000000
b0110 "
b1111111111111011 '
b0110 *
b1111111111111011 /
#11000000000000
#12000000000000
b0111 "
b1010101010101010 #
b0000000000000001 $
b0101010101010100 '
b0111 *
b1010101010101010 +
b0000000000000001 ,
b0101010101010100 /
#13000000000000
#14000000000000
b1000 "
b1010000010101010 #
b0000000000000011 $
b1111010000010101 '
b1000 *
b1010000010101010 +
b0000000000000011 ,
b1111010000010101 /
#15000000000000
#16000000000000
b1001 "
b0000000010101111 #
b0000000001101111 $
b0000000000101111 '
b1001 *
b0000000010101111 +
b0000000001101111 ,
b0000000000101111 /
#17000000000000
#18000000000000
b1111111111111100 #
b1111111111111101 $
b1111111111111100 '
b1111111111111100 +
b1111111111111101 ,
b1111111111111100 /
#19000000000000
#20000000000000
b1010 "
b0000000010101111 #
b0000000001101111 $
b0000000011101111 '
b1010 *
b0000000010101111 +
b0000000001101111 ,
b0000000011101111 /
#21000000000000
#22000000000000
b1011 "
b0000000010101111 $
1%
b0000000000000000 '
b1011 *
b0000000010101111 ,
1-
b0000000000000000 /
#23000000000000
#24000000000000
b1100 "
0%
b1100 *
0-
#25000000000000
#26000000000000
b1101 "
1%
b1101 *
1-
#27000000000000
#28000000000000
b1110 "
b1111111111111111 #
b1110 *
b1111111111111111 +
#29000000000000
#30000000000000
b1111 "
b1111111111111111 '
b1111 *
b1111111111111111 /
#31000000000000
#32000000000000
0%
b0000000000000000 '
1(
0-
b0000000000000000 /
10
#33000000000000
1%
b1111111111111111 '
0(
1-
b1111111111111111 /
00
#34000000000000
b0001 "
b0000001000000000 #
0%
b1000000000 &
b0000000000000000 '
b0001 *
b0000001000000000 +
0-
b1000000000 .
b0000000000000000 /
#35000000000000
#36000000000000
b0011 "
b0000000000001111 $
b0000001111 &
b0011 *
b0000000000001111 ,
b0000001111 .
#37000000000000
#38000000000000
b0100 "
b0000000000010000 #
b0000000000 &
b0000000000010000 '
b0100 *
b0000000000010000 +
b0000000000 .
b0000000000010000 /
#39000000000000
#40000000000000
b0101 "
b0000000000000101 #
b0000000000001010 $
b0000000000001111 '
b0101 *
b0000000000000101 +
b0000000000001010 ,
b0000000000001111 /
#41000000000000
#42000000000000
b0110 "
b1111111111111011 '
b0110 *
b1111111111111011 /
#43000000000000
#44000000000000
b0111 "
b1010101010101010 #
b0000000000000001 $
b0101010101010100 '
b0111 *
b1010101010101010 +
b0000000000000001 ,
b0101010101010100 /
#45000000000000
#46000000000000
b1000 "
b1010000010101010 #
b0000000000000011 $
b1111010000010101 '
b1000 *
b1010000010101010 +
b0000000000000011 ,
b1111010000010101 /
#47000000000000
#48000000000000
b1001 "
b0000000010101111 #
b0000000001101111 $
b0000000000101111 '
b1001 *
b0000000010101111 +
b0000000001101111 ,
b0000000000101111 /
#49000000000000
#50000000000000
b1111111111111100 #
b1111111111111101 $
b1111111111111100 '
b1111111111111100 +
b1111111111111101 ,
b1111111111111100 /
#51000000000000
#52000000000000
b1010 "
b0000000010101111 #
b0000000001101111 $
b0000000011101111 '
b1010 *
b0000000010101111 +
b0000000001101111 ,
b0000000011101111 /
#53000000000000
#54000000000000
b1011 "
b0000000010101111 $
1%
b0000000000000000 '
b1011 *
b0000000010101111 ,
1-
b0000000000000000 /
#55000000000000
#56000000000000
b1100 "
0%
b1100 *
0-
#57000000000000
#58000000000000
b1101 "
1%
b1101 *
1-
#59000000000000
#60000000000000
b1110 "
b1111111111111111 #
b1110 *
b1111111111111111 +
#61000000000000
#62000000000000
b1111 "
b1111111111111111 '
b1111 *
b1111111111111111 /
#63000000000000
#64000000000000
0%
b0000000000000000 '
1(
0-
b0000000000000000 /
10
#65000000000000
1%
b1111111111111111 '
0(
1-
b1111111111111111 /
00
#66000000000000
b0001 "
b0000001000000000 #
0%
b1000000000 &
b0000000000000000 '
b0001 *
b0000001000000000 +
0-
b1000000000 .
b0000000000000000 /
#67000000000000
#68000000000000
b0011 "
b0000000000001111 $
b0000001111 &
b0011 *
b0000000000001111 ,
b0000001111 .
#69000000000000
#70000000000000
b0100 "
b0000000000010000 #
b0000000000 &
b0000000000010000 '
b0100 *
b0000000000010000 +
b0000000000 .
b0000000000010000 /
#71000000000000
#72000000000000
b0101 "
b0000000000000101 #
b0000000000001010 $
b0000000000001111 '
b0101 *
b0000000000000101 +
b0000000000001010 ,
b0000000000001111 /
#73000000000000
#74000000000000
b0110 "
b1111111111111011 '
b0110 *
b1111111111111011 /
#75000000000000
#76000000000000
b0111 "
b1010101010101010 #
b0000000000000001 $
b0101010101010100 '
b0111 *
b1010101010101010 +
b0000000000000001 ,
b0101010101010100 /
#77000000000000
#78000000000000
b1000 "
b1010000010101010 #
b0000000000000011 $
b1111010000010101 '
b1000 *
b1010000010101010 +
b0000000000000011 ,
b1111010000010101 /
#79000000000000
#80000000000000
b1001 "
b0000000010101111 #
b0000000001101111 $
b0000000000101111 '
b1001 *
b0000000010101111 +
b0000000001101111 ,
b0000000000101111 /
#81000000000000
#82000000000000
b1111111111111100 #
b1111111111111101 $
b1111111111111100 '
b1111111111111100 +
b1111111111111101 ,
b1111111111111100 /
#83000000000000
#84000000000000
b1010 "
b0000000010101111 #
b0000000001101111 $
b0000000011101111 '
b1010 *
b0000000010101111 +
b0000000001101111 ,
b0000000011101111 /
#85000000000000
#86000000000000
b1011 "
b0000000010101111 $
1%
b0000000000000000 '
b1011 *
b0000000010101111 ,
1-
b0000000000000000 /
#87000000000000
#88000000000000
b1100 "
0%
b1100 *
0-
#89000000000000
#90000000000000
b1101 "
1%
b1101 *
1-
#91000000000000
#92000000000000
b1110 "
b1111111111111111 #
b1110 *
b1111111111111111 +
#93000000000000
#94000000000000
b1111 "
b1111111111111111 '
b1111 *
b1111111111111111 /
#95000000000000
#96000000000000
0%
b0000000000000000 '
1(
0-
b0000000000000000 /
10
#97000000000000
1%
b1111111111111111 '
0(
1-
b1111111111111111 /
00
#98000000000000
b0001 "
b0000001000000000 #
0%
b1000000000 &
b0000000000000000 '
b0001 *
b0000001000000000 +
0-
b1000000000 .
b0000000000000000 /
#99000000000000
#100000000000000
b0011 "
b0000000000001111 $
b0000001111 &
b0011 *
b0000000000001111 ,
b0000001111 .
